/** Task: Stack made of a linked list *  @author: Frank Carrano * * */public class LinkedStack<T> implements StackInterface<T>,                                         java.io.Serializable{    private Node<T> topNode; // references the first node in the chain        public LinkedStack()    {        topNode = null;    } // end default constructor    public void push(T newEntry)    {        Node<T> newNode = new Node<T>(newEntry, topNode);        topNode = newNode;    } // end push    public T peek()    {        T top = null;            if (topNode != null)            top = topNode.getData();            return top;    } // end peek    public T pop()    {        T top = peek();            if (topNode != null)            topNode = topNode.getNextNode();            return top;    } // end pop    public boolean isEmpty()    {        return topNode == null;    } // end isEmpty    public void clear()    {        topNode = null;    } // end clear} // end LinkedStack